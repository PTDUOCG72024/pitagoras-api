basePath: /
definitions:
  accidents.Classification:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
    type: object
  accidents.CreateAccidentRequest:
    properties:
      accident_date:
        type: string
      classification_id:
        type: string
      construction_area:
        type: string
      description:
        type: string
      employee_id:
        type: string
      gravity_id:
        type: string
      injured_part_id:
        type: string
      project_id:
        type: string
    type: object
  accidents.CreateAccidentResponse:
    properties:
      accident_date:
        type: string
      classification:
        $ref: '#/definitions/accidents.Classification'
      construction_area:
        type: string
      created_at:
        type: string
      description:
        type: string
      employee:
        $ref: '#/definitions/employees.Employee'
      gravity:
        $ref: '#/definitions/accidents.Gravity'
      id:
        type: string
      injured_part:
        $ref: '#/definitions/accidents.InjuredPart'
      is_deleted:
        type: boolean
      project:
        $ref: '#/definitions/projects.Project'
    type: object
  accidents.CreateClassificationRequest:
    properties:
      name:
        type: string
    type: object
  accidents.CreateClassificationResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
    type: object
  accidents.CreateGravityRequest:
    properties:
      name:
        type: string
    type: object
  accidents.CreateGravityResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
    type: object
  accidents.CreateInjuredPartRequest:
    properties:
      name:
        type: string
    type: object
  accidents.CreateInjuredPartResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
    type: object
  accidents.GetAccidentByIdResponse:
    properties:
      accident_date:
        type: string
      classification:
        $ref: '#/definitions/accidents.Classification'
      construction_area:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      employee:
        $ref: '#/definitions/employees.Employee'
      gravity:
        $ref: '#/definitions/accidents.Gravity'
      id:
        type: string
      injured_part:
        $ref: '#/definitions/accidents.InjuredPart'
      is_deleted:
        type: boolean
      project:
        $ref: '#/definitions/projects.Project'
      updated_at:
        type: string
    type: object
  accidents.GetClassificationByIdResponse:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
    type: object
  accidents.GetGravityByIdResponse:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
    type: object
  accidents.GetInjuredPartByIdResponse:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
    type: object
  accidents.Gravity:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
    type: object
  accidents.InjuredPart:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
    type: object
  accidents.UpdateAccidentRequest:
    properties:
      accident_date:
        type: string
      classification_id:
        type: string
      construction_area:
        type: string
      description:
        type: string
      employee_id:
        type: string
      gravity_id:
        type: string
      injured_part_id:
        type: string
      project_id:
        type: string
    type: object
  accidents.UpdateClassificationRequest:
    properties:
      name:
        type: string
    type: object
  accidents.UpdateGravityRequest:
    properties:
      name:
        type: string
    type: object
  accidents.UpdateInjuredPartRequest:
    properties:
      name:
        type: string
    type: object
  employees.CreateEmployeeRequest:
    properties:
      contract_type:
        type: string
      email:
        type: string
      end_date:
        type: string
      identification_number:
        type: string
      identification_type:
        type: string
      in_law:
        type: boolean
      name:
        type: string
      nationality_id:
        type: string
      position_id:
        type: string
      start_date:
        type: string
      supervisor_id:
        type: string
    type: object
  employees.CreateEmployeeResponse:
    properties:
      contract_type:
        type: string
      created_at:
        type: string
      email:
        type: string
      end_date:
        type: string
      id:
        type: string
      identification_number:
        type: string
      identification_type:
        type: string
      in_law:
        type: boolean
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
      nationality:
        $ref: '#/definitions/employees.Nationality'
      position:
        $ref: '#/definitions/employees.Position'
      start_date:
        type: string
      supervisor:
        $ref: '#/definitions/employees.Supervisor'
    type: object
  employees.CreateNationalityRequest:
    properties:
      name:
        type: string
    type: object
  employees.CreateNationalityResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
    type: object
  employees.CreatePositionRequest:
    properties:
      name:
        type: string
    type: object
  employees.CreatePositionResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
    type: object
  employees.CreateSupervisorRequest:
    properties:
      name:
        type: string
    type: object
  employees.CreateSupervisorResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
    type: object
  employees.Employee:
    properties:
      contract_type:
        type: string
      created_at:
        default: now()
        type: string
      delete_at:
        type: string
      email:
        type: string
      end_date:
        type: string
      id:
        type: string
      identification_number:
        type: string
      identification_type:
        type: string
      in_law:
        type: boolean
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
      nationality:
        $ref: '#/definitions/employees.Nationality'
      position:
        $ref: '#/definitions/employees.Position'
      start_date:
        type: string
      supervisor:
        $ref: '#/definitions/employees.Supervisor'
      updated_at:
        default: now()
        type: string
    type: object
  employees.GetEmployeeResponse:
    properties:
      contract_type:
        type: string
      created_at:
        type: string
      delete_at:
        type: string
      email:
        type: string
      end_date:
        type: string
      id:
        type: string
      identification_number:
        type: string
      identification_type:
        type: string
      in_law:
        type: boolean
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
      nationality:
        $ref: '#/definitions/employees.Nationality'
      position:
        $ref: '#/definitions/employees.Position'
      start_date:
        type: string
      supervisor:
        $ref: '#/definitions/employees.Supervisor'
      updated_at:
        type: string
    type: object
  employees.GetNationalityResponse:
    properties:
      created_at:
        type: string
      delete_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
    type: object
  employees.GetPositionResponse:
    properties:
      created_at:
        type: string
      delete_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
    type: object
  employees.GetSupervisorResponse:
    properties:
      created_at:
        type: string
      delete_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
    type: object
  employees.Nationality:
    properties:
      created_at:
        default: now()
        type: string
      delete_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
      updated_at:
        default: now()
        type: string
    type: object
  employees.Position:
    properties:
      created_at:
        default: now()
        type: string
      delete_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
      updated_at:
        default: now()
        type: string
    type: object
  employees.Supervisor:
    properties:
      created_at:
        default: now()
        type: string
      delete_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
      updated_at:
        default: now()
        type: string
    type: object
  employees.UpdateEmployeeRequest:
    properties:
      contract_type:
        type: string
      email:
        type: string
      end_date:
        type: string
      identification_number:
        type: string
      identification_type:
        type: string
      in_law:
        type: boolean
      name:
        type: string
      nationality_id:
        type: string
      position_id:
        type: string
      start_date:
        type: string
      supervisor_id:
        type: string
    type: object
  employees.UpdateNationalityRequest:
    properties:
      name:
        type: string
    type: object
  employees.UpdatePositionRequest:
    properties:
      name:
        type: string
    type: object
  employees.UpdateSupervisorRequest:
    properties:
      name:
        type: string
    type: object
  projects.CreateProjectRequest:
    properties:
      description:
        type: string
      end_date:
        type: string
      name:
        type: string
      start_date:
        type: string
    type: object
  projects.CreateProjectResponse:
    properties:
      created_at:
        type: string
      description:
        type: string
      end_date:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      start_date:
        type: string
    type: object
  projects.GetProjectResponse:
    properties:
      created_at:
        type: string
      delete_at:
        type: string
      description:
        type: string
      end_date:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
      start_date:
        type: string
      updated_at:
        type: string
    type: object
  projects.Project:
    properties:
      created_at:
        default: now()
        type: string
      delete_at:
        type: string
      description:
        type: string
      end_date:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
      start_date:
        type: string
      updated_at:
        default: now()
        type: string
    type: object
  projects.UpdateProjectRequest:
    properties:
      description:
        type: string
      end_date:
        type: string
      name:
        type: string
      start_date:
        type: string
    type: object
  users.UserCreateRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  users.UserCreateResponse:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  users.UserLoginResponse:
    properties:
      created_at:
        default: now()
        type: string
      email:
        type: string
      id:
        type: string
      last_login:
        type: string
      name:
        type: string
      password:
        type: string
      updated_at:
        default: now()
        type: string
    type: object
  users.UserRequest:
    properties:
      created_at:
        default: now()
        type: string
      delete_at:
        type: string
      email:
        type: string
      last_login:
        type: string
      password:
        type: string
      updated_at:
        default: now()
        type: string
    required:
    - email
    - password
    type: object
  users.UserResponse:
    properties:
      created_at:
        default: now()
        type: string
      delete_at:
        type: string
      email:
        type: string
      id:
        type: string
      is_deleted:
        type: boolean
      last_login:
        type: string
      name:
        type: string
      password:
        type: string
      updated_at:
        default: now()
        type: string
    type: object
  users.UserUpdateRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
host: pitagoras-api-production.up.railway.app
info:
  contact:
    email: xbizzybone@gmail.com
    name: xbizzybone
  description: Golang GoFiber swagger auto generate step by step by swaggo
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: GoFiber Pitagoras API
  version: "1.0"
paths:
  /accidents/:
    get:
      consumes:
      - application/json
      description: Get all accidents
      produces:
      - application/json
      responses:
        "200":
          description: Accidentes obtenidos correctamente
          schema:
            $ref: '#/definitions/accidents.GetAccidentByIdResponse'
        "500":
          description: Error obteniendo los accidentes
          schema:
            type: string
      summary: Get all accidents
      tags:
      - accidents
    post:
      consumes:
      - application/json
      description: Create a new accident
      parameters:
      - description: Create Accident Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/accidents.CreateAccidentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Accidente creado correctamente
          schema:
            $ref: '#/definitions/accidents.CreateAccidentResponse'
        "400":
          description: Error validando el cuerpo de la petición
          schema:
            type: string
        "500":
          description: Error creando el accidente
          schema:
            type: string
      summary: Create a new accident
      tags:
      - accidents
  /accidents/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an accident
      parameters:
      - description: Accident ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Accidente eliminado correctamente
          schema:
            type: string
        "500":
          description: Error eliminando el accidente
          schema:
            type: string
      summary: Delete an accident
      tags:
      - accidents
    get:
      consumes:
      - application/json
      description: Get an accident by id
      parameters:
      - description: Accident ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Accidente obtenido correctamente
          schema:
            $ref: '#/definitions/accidents.GetAccidentByIdResponse'
        "500":
          description: Error obteniendo el accidente
          schema:
            type: string
      summary: Get an accident by id
      tags:
      - accidents
    put:
      consumes:
      - application/json
      description: Update an accident
      parameters:
      - description: Accident ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Accident Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/accidents.UpdateAccidentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Accidente actualizado correctamente
          schema:
            type: string
        "400":
          description: Error validando el cuerpo de la petición
          schema:
            type: string
        "500":
          description: Error actualizando el accidente
          schema:
            type: string
      summary: Update an accident
      tags:
      - accidents
  /auth/login:
    post:
      consumes:
      - application/json
      description: login user
      parameters:
      - description: UserRequest
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/users.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.UserLoginResponse'
        "400":
          description: Error validando el cuerpo de la petición
          schema:
            type: string
        "401":
          description: Cuenta de usuario deshabilitada
          schema:
            type: string
        "404":
          description: El usuario no existe
          schema:
            type: string
        "500":
          description: Error iniciando sesión
          schema:
            type: string
      summary: login user
      tags:
      - users
  /auth/register:
    post:
      consumes:
      - application/json
      description: register new user
      parameters:
      - description: UserCreateRequest
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/users.UserCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.UserCreateResponse'
        "400":
          description: Error validando el cuerpo de la petición
          schema:
            type: string
        "409":
          description: El usuario ya existe
          schema:
            type: string
        "500":
          description: Error creando el usuario
          schema:
            type: string
      summary: register new user
      tags:
      - users
  /classifications/:
    get:
      consumes:
      - application/json
      description: Get all classifications
      produces:
      - application/json
      responses:
        "200":
          description: Clasificaciones obtenidas correctamente
          schema:
            $ref: '#/definitions/accidents.GetClassificationByIdResponse'
        "500":
          description: Error obteniendo las clasificaciones
          schema:
            type: string
      summary: Get all classifications
      tags:
      - classifications
    post:
      consumes:
      - application/json
      description: Create a new Classification
      parameters:
      - description: Create Classification Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/accidents.CreateClassificationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Clasificación creada correctamente
          schema:
            $ref: '#/definitions/accidents.CreateClassificationResponse'
        "400":
          description: Error validando el cuerpo de la petición
          schema:
            type: string
        "500":
          description: Error creando la clasificación
          schema:
            type: string
      summary: Create a new Classification
      tags:
      - classifications
  /classifications/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Classification
      parameters:
      - description: Classification ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Clasificación eliminada correctamente
          schema:
            type: string
        "500":
          description: Error eliminando la clasificación
          schema:
            type: string
      summary: Delete a Classification
      tags:
      - classifications
    get:
      consumes:
      - application/json
      description: Get a Classification by id
      parameters:
      - description: Classification ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Clasificación obtenida correctamente
          schema:
            $ref: '#/definitions/accidents.GetClassificationByIdResponse'
        "500":
          description: Error obteniendo la clasificación
          schema:
            type: string
      summary: Get a Classification by id
      tags:
      - classifications
    put:
      consumes:
      - application/json
      description: Update a Classification
      parameters:
      - description: Classification ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Classification Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/accidents.UpdateClassificationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Clasificación actualizada correctamente
          schema:
            type: string
        "400":
          description: Error validando el cuerpo de la petición
          schema:
            type: string
        "500":
          description: Error actualizando la clasificación
          schema:
            type: string
      summary: Update a Classification
      tags:
      - classifications
  /classifications/activate/{id}:
    put:
      consumes:
      - application/json
      description: Activate a Classification
      parameters:
      - description: Classification ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Clasificación activada correctamente
          schema:
            type: string
        "500":
          description: Error activando la clasificación
          schema:
            type: string
      summary: Activate a Classification
      tags:
      - classifications
  /classifications/deactivate/{id}:
    put:
      consumes:
      - application/json
      description: Deactivate a Classification
      parameters:
      - description: Classification ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Clasificación desactivada correctamente
          schema:
            type: string
        "500":
          description: Error desactivando la clasificación
          schema:
            type: string
      summary: Deactivate a Classification
      tags:
      - classifications
  /employees:
    get:
      consumes:
      - application/json
      description: Get all employees
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/employees.GetEmployeeResponse'
            type: array
        "500":
          description: Error obteniendo los empleados
          schema:
            type: string
      summary: Get all employees
      tags:
      - employees
    post:
      consumes:
      - application/json
      description: Create a new employee
      parameters:
      - description: Employee object that needs to be created
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/employees.CreateEmployeeRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/employees.CreateEmployeeResponse'
        "400":
          description: Error validando el cuerpo de la petición
          schema:
            type: string
        "500":
          description: Error creando el empleado
          schema:
            type: string
      summary: Create a new employee
      tags:
      - employees
  /employees/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a employee
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Empleado eliminado correctamente
          schema:
            type: string
        "500":
          description: Error eliminando el empleado
          schema:
            type: string
      summary: Delete a employee
      tags:
      - employees
    get:
      consumes:
      - application/json
      description: Get a employee by id
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/employees.GetEmployeeResponse'
        "500":
          description: Error obteniendo el empleado
          schema:
            type: string
      summary: Get a employee by id
      tags:
      - employees
    put:
      consumes:
      - application/json
      description: Update a employee
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: string
      - description: Employee object that needs to be updated
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/employees.UpdateEmployeeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Empleado actualizado correctamente
          schema:
            type: string
        "400":
          description: Error validando el cuerpo de la petición
          schema:
            type: string
        "500":
          description: Error actualizando el empleado
          schema:
            type: string
      summary: Update a employee
      tags:
      - employees
  /employees/activate/{id}:
    put:
      consumes:
      - application/json
      description: Activate a new employee
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Empleado activado correctamente
          schema:
            type: string
        "500":
          description: Error activando el empleado
          schema:
            type: string
      summary: Activate a new employee
      tags:
      - employees
  /employees/deactivate/{id}:
    put:
      consumes:
      - application/json
      description: Deactivate a employee
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Empleado desactivado correctamente
          schema:
            type: string
        "500":
          description: Error desactivando el empleado
          schema:
            type: string
      summary: Deactivate a employee
      tags:
      - employees
  /gravities/:
    get:
      consumes:
      - application/json
      description: Get all gravities
      produces:
      - application/json
      responses:
        "200":
          description: Gravedades obtenidas correctamente
          schema:
            $ref: '#/definitions/accidents.GetGravityByIdResponse'
        "500":
          description: Error obteniendo las gravedades
          schema:
            type: string
      summary: Get all gravities
      tags:
      - gravities
    post:
      consumes:
      - application/json
      description: Create a new Gravity
      parameters:
      - description: Create Gravity Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/accidents.CreateGravityRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Gravedad creada correctamente
          schema:
            $ref: '#/definitions/accidents.CreateGravityResponse'
        "400":
          description: Error validando el cuerpo de la petición
          schema:
            type: string
        "500":
          description: Error creando la gravedad
          schema:
            type: string
      summary: Create a new Gravity
      tags:
      - gravities
  /gravities/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Gravity
      parameters:
      - description: Gravity ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Gravedad eliminada correctamente
          schema:
            type: string
        "500":
          description: Error eliminando la gravedad
          schema:
            type: string
      summary: Delete a Gravity
      tags:
      - gravities
    get:
      consumes:
      - application/json
      description: Get a Gravity by id
      parameters:
      - description: Gravity ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Gravedad obtenida correctamente
          schema:
            $ref: '#/definitions/accidents.GetGravityByIdResponse'
        "500":
          description: Error obteniendo la gravedad
          schema:
            type: string
      summary: Get a Gravity by id
      tags:
      - gravities
    put:
      consumes:
      - application/json
      description: Update a Gravity
      parameters:
      - description: Gravity ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Gravity Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/accidents.UpdateGravityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Gravedad actualizada correctamente
          schema:
            type: string
        "400":
          description: Error validando el cuerpo de la petición
          schema:
            type: string
        "500":
          description: Error actualizando la gravedad
          schema:
            type: string
      summary: Update a Gravity
      tags:
      - gravities
  /gravities/activate/{id}:
    put:
      consumes:
      - application/json
      description: Activate a Gravity
      parameters:
      - description: Gravity ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Gravedad activada correctamente
          schema:
            type: string
        "500":
          description: Error activando la gravedad
          schema:
            type: string
      summary: Activate a Gravity
      tags:
      - gravities
  /gravities/deactivate/{id}:
    put:
      consumes:
      - application/json
      description: Deactivate a Gravity
      parameters:
      - description: Gravity ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Gravedad desactivada correctamente
          schema:
            type: string
        "500":
          description: Error desactivando la gravedad
          schema:
            type: string
      summary: Deactivate a Gravity
      tags:
      - gravities
  /injured-parts/:
    get:
      consumes:
      - application/json
      description: Get all injured parts
      produces:
      - application/json
      responses:
        "200":
          description: Partes lesionadas obtenidas correctamente
          schema:
            $ref: '#/definitions/accidents.GetInjuredPartByIdResponse'
        "500":
          description: Error obteniendo las partes lesionadas
          schema:
            type: string
      summary: Get all injured parts
      tags:
      - injured-parts
    post:
      consumes:
      - application/json
      description: Create a new InjuredPart
      parameters:
      - description: Create InjuredPart Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/accidents.CreateInjuredPartRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Parte lesionada creada correctamente
          schema:
            $ref: '#/definitions/accidents.CreateInjuredPartResponse'
        "400":
          description: Error validando el cuerpo de la petición
          schema:
            type: string
        "500":
          description: Error creando la parte lesionada
          schema:
            type: string
      summary: Create a new InjuredPart
      tags:
      - injured-parts
  /injured-parts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a InjuredPart
      parameters:
      - description: InjuredPart ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Parte lesionada eliminada correctamente
          schema:
            type: string
        "500":
          description: Error eliminando la parte lesionada
          schema:
            type: string
      summary: Delete a InjuredPart
      tags:
      - injured-parts
    get:
      consumes:
      - application/json
      description: Get a InjuredPart by id
      parameters:
      - description: InjuredPart ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Parte lesionada obtenida correctamente
          schema:
            $ref: '#/definitions/accidents.GetInjuredPartByIdResponse'
        "500":
          description: Error obteniendo la parte lesionada
          schema:
            type: string
      summary: Get a InjuredPart by id
      tags:
      - injured-parts
    put:
      consumes:
      - application/json
      description: Update a InjuredPart
      parameters:
      - description: InjuredPart ID
        in: path
        name: id
        required: true
        type: string
      - description: Update InjuredPart Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/accidents.UpdateInjuredPartRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Parte lesionada actualizada correctamente
          schema:
            type: string
        "400":
          description: Error validando el cuerpo de la petición
          schema:
            type: string
        "500":
          description: Error actualizando la parte lesionada
          schema:
            type: string
      summary: Update a InjuredPart
      tags:
      - injured-parts
  /injured-parts/activate/{id}:
    put:
      consumes:
      - application/json
      description: Activate a InjuredPart
      parameters:
      - description: InjuredPart ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Parte lesionada activada correctamente
          schema:
            type: string
        "500":
          description: Error activando la parte lesionada
          schema:
            type: string
      summary: Activate a InjuredPart
      tags:
      - injured-parts
  /injured-parts/deactivate/{id}:
    put:
      consumes:
      - application/json
      description: Deactivate a InjuredPart
      parameters:
      - description: InjuredPart ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Parte lesionada desactivada correctamente
          schema:
            type: string
        "500":
          description: Error desactivando la parte lesionada
          schema:
            type: string
      summary: Deactivate a InjuredPart
      tags:
      - injured-parts
  /nationalities:
    get:
      consumes:
      - application/json
      description: Get all nationalities
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/employees.GetNationalityResponse'
            type: array
        "500":
          description: Error obteniendo las nacionalidades
          schema:
            type: string
      summary: Get all nationalities
      tags:
      - nationalities
    post:
      consumes:
      - application/json
      description: Create a new nationality
      parameters:
      - description: Nationality object that needs to be created
        in: body
        name: nationality
        required: true
        schema:
          $ref: '#/definitions/employees.CreateNationalityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/employees.CreateNationalityResponse'
        "400":
          description: Error validando el cuerpo de la petición
          schema:
            type: string
        "500":
          description: Error creando la nacionalidad
          schema:
            type: string
      summary: Create a new nationality
      tags:
      - nationalities
  /nationalities/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a nationality
      parameters:
      - description: Nationality ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Nacionalidad eliminada correctamente
          schema:
            type: string
        "500":
          description: Error eliminando la nacionalidad
          schema:
            type: string
      summary: Delete a nationality
      tags:
      - nationalities
    get:
      consumes:
      - application/json
      description: Get nationality by id
      parameters:
      - description: Nationality ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/employees.GetNationalityResponse'
        "500":
          description: Error obteniendo la nacionalidad
          schema:
            type: string
      summary: Get nationality by id
      tags:
      - nationalities
    put:
      consumes:
      - application/json
      description: Update a nationality
      parameters:
      - description: Nationality ID
        in: path
        name: id
        required: true
        type: string
      - description: Nationality object that needs to be updated
        in: body
        name: nationality
        required: true
        schema:
          $ref: '#/definitions/employees.UpdateNationalityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Nacionalidad actualizada correctamente
          schema:
            type: string
        "400":
          description: Error validando el cuerpo de la petición
          schema:
            type: string
        "500":
          description: Error actualizando la nacionalidad
          schema:
            type: string
      summary: Update a nationality
      tags:
      - nationalities
  /nationalities/activate/{id}:
    put:
      consumes:
      - application/json
      description: Activate a new nationality
      parameters:
      - description: Nationality ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Nacionalidad activada correctamente
          schema:
            type: string
        "500":
          description: Error activando la nacionalidad
          schema:
            type: string
      summary: Activate a new nationality
      tags:
      - nationalities
  /nationalities/deactivate/{id}:
    put:
      consumes:
      - application/json
      description: Deactivate a nationality
      parameters:
      - description: Nationality ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Nacionalidad desactivada correctamente
          schema:
            type: string
        "500":
          description: Error desactivando la nacionalidad
          schema:
            type: string
      summary: Deactivate a nationality
      tags:
      - nationalities
  /positions:
    get:
      consumes:
      - application/json
      description: Get all positions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/employees.GetPositionResponse'
            type: array
        "500":
          description: Error obteniendo los cargos
          schema:
            type: string
      summary: Get all positions
      tags:
      - positions
    post:
      consumes:
      - application/json
      description: Create a new position
      parameters:
      - description: Position object that needs to be created
        in: body
        name: position
        required: true
        schema:
          $ref: '#/definitions/employees.CreatePositionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/employees.CreatePositionResponse'
        "400":
          description: Error validando el cuerpo de la petición
          schema:
            type: string
        "500":
          description: Error creando el cargo
          schema:
            type: string
      summary: Create a new position
      tags:
      - positions
  /positions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a position
      parameters:
      - description: Position ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Cargo eliminado correctamente
          schema:
            type: string
        "500":
          description: Error eliminando el cargo
          schema:
            type: string
      summary: Delete a position
      tags:
      - positions
    get:
      consumes:
      - application/json
      description: Get position by id
      parameters:
      - description: Position ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/employees.GetPositionResponse'
        "500":
          description: Error obteniendo el cargo
          schema:
            type: string
      summary: Get position by id
      tags:
      - positions
    put:
      consumes:
      - application/json
      description: Update a position
      parameters:
      - description: Position ID
        in: path
        name: id
        required: true
        type: string
      - description: Position object that needs to be updated
        in: body
        name: position
        required: true
        schema:
          $ref: '#/definitions/employees.UpdatePositionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Cargo actualizado correctamente
          schema:
            type: string
        "400":
          description: Error validando el cuerpo de la petición
          schema:
            type: string
        "500":
          description: Error actualizando el cargo
          schema:
            type: string
      summary: Update a position
      tags:
      - positions
  /positions/activate/{id}:
    put:
      consumes:
      - application/json
      description: Activate a new position
      parameters:
      - description: Position ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Cargo activado correctamente
          schema:
            type: string
        "500":
          description: Error activando el cargo
          schema:
            type: string
      summary: Activate a new position
      tags:
      - positions
  /positions/deactivate/{id}:
    put:
      consumes:
      - application/json
      description: Deactivate a position
      parameters:
      - description: Position ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Cargo desactivado correctamente
          schema:
            type: string
        "500":
          description: Error desactivando el cargo
          schema:
            type: string
      summary: Deactivate a position
      tags:
      - positions
  /projects:
    get:
      consumes:
      - application/json
      description: Get all projects
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/projects.GetProjectResponse'
            type: array
        "500":
          description: Error obteniendo los proyectos
          schema:
            type: string
      summary: Get all projects
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: Create a new project
      parameters:
      - description: Project object that needs to be created
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/projects.CreateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/projects.CreateProjectResponse'
        "400":
          description: Error validando el cuerpo de la petición
          schema:
            type: string
        "500":
          description: Error creando el proyecto
          schema:
            type: string
      summary: Create a new project
      tags:
      - projects
  /projects/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Proyecto eliminado correctamente
          schema:
            type: string
        "500":
          description: Error eliminando el proyecto
          schema:
            type: string
      summary: Delete a project
      tags:
      - projects
    get:
      consumes:
      - application/json
      description: Get a project by id
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/projects.GetProjectResponse'
        "500":
          description: Error obteniendo el proyecto
          schema:
            type: string
      summary: Get a project by id
      tags:
      - projects
    put:
      consumes:
      - application/json
      description: Update a project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      - description: Project object that needs to be updated
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/projects.UpdateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Proyecto actualizado correctamente
          schema:
            type: string
        "400":
          description: Error validando el cuerpo de la petición
          schema:
            type: string
        "500":
          description: Error actualizando el proyecto
          schema:
            type: string
      summary: Update a project
      tags:
      - projects
  /projects/activate/{id}:
    put:
      consumes:
      - application/json
      description: Activate a project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Proyecto activado correctamente
          schema:
            type: string
        "500":
          description: Error activando el proyecto
          schema:
            type: string
      summary: Activate a project
      tags:
      - projects
  /projects/deactivate/{id}:
    put:
      consumes:
      - application/json
      description: Deactivate a project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Proyecto desactivado correctamente
          schema:
            type: string
        "500":
          description: Error desactivando el proyecto
          schema:
            type: string
      summary: Deactivate a project
      tags:
      - projects
  /supervisors:
    get:
      consumes:
      - application/json
      description: Get all supervisors
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/employees.GetSupervisorResponse'
            type: array
        "500":
          description: Error obteniendo los supervisores
          schema:
            type: string
      summary: Get all supervisors
      tags:
      - supervisors
    post:
      consumes:
      - application/json
      description: Create a new supervisor
      parameters:
      - description: Supervisor object that needs to be created
        in: body
        name: supervisor
        required: true
        schema:
          $ref: '#/definitions/employees.CreateSupervisorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/employees.CreateSupervisorResponse'
        "400":
          description: Error validando el cuerpo de la petición
          schema:
            type: string
        "500":
          description: Error creando el supervisor
          schema:
            type: string
      summary: Create a new supervisor
      tags:
      - supervisors
  /supervisors/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a supervisor
      parameters:
      - description: Supervisor ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Supervisor eliminado correctamente
          schema:
            type: string
        "500":
          description: Error eliminando el supervisor
          schema:
            type: string
      summary: Delete a supervisor
      tags:
      - supervisors
    get:
      consumes:
      - application/json
      description: Get supervisor by id
      parameters:
      - description: Supervisor ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/employees.GetSupervisorResponse'
        "500":
          description: Error obteniendo el supervisor
          schema:
            type: string
      summary: Get supervisor by id
      tags:
      - supervisors
    put:
      consumes:
      - application/json
      description: Update a supervisor
      parameters:
      - description: Supervisor ID
        in: path
        name: id
        required: true
        type: string
      - description: Supervisor object that needs to be updated
        in: body
        name: supervisor
        required: true
        schema:
          $ref: '#/definitions/employees.UpdateSupervisorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Supervisor actualizado correctamente
          schema:
            type: string
        "400":
          description: Error validando el cuerpo de la petición
          schema:
            type: string
        "500":
          description: Error actualizando el supervisor
          schema:
            type: string
      summary: Update a supervisor
      tags:
      - supervisors
  /supervisors/activate/{id}:
    put:
      consumes:
      - application/json
      description: Activate a new supervisor
      parameters:
      - description: Supervisor ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Supervisor activado correctamente
          schema:
            type: string
        "500":
          description: Error activando el supervisor
          schema:
            type: string
      summary: Activate a new supervisor
      tags:
      - supervisors
  /supervisors/deactivate/{id}:
    put:
      consumes:
      - application/json
      description: Deactivate a supervisor
      parameters:
      - description: Supervisor ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Supervisor desactivado correctamente
          schema:
            type: string
        "500":
          description: Error desactivando el supervisor
          schema:
            type: string
      summary: Deactivate a supervisor
      tags:
      - supervisors
  /users/{id}:
    get:
      consumes:
      - application/json
      description: get user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.UserResponse'
        "400":
          description: Usuario no existe
          schema:
            type: string
        "404":
          description: El usuario no existe
          schema:
            type: string
        "500":
          description: Error obteniendo el usuario
          schema:
            type: string
      summary: get user by id
      tags:
      - users
    put:
      consumes:
      - application/json
      description: update user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: UserUpdateRequest
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/users.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Usuario actualizado correctamente
          schema:
            type: string
        "400":
          description: Usuario no existe
          schema:
            type: string
        "404":
          description: El usuario no existe
          schema:
            type: string
        "500":
          description: Error actualizando el usuario
          schema:
            type: string
      summary: update user
      tags:
      - users
  /users/activate/{id}:
    put:
      consumes:
      - application/json
      description: activate user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Usuario activado correctamente
          schema:
            type: string
        "400":
          description: Usuario no existe
          schema:
            type: string
        "404":
          description: El usuario no existe
          schema:
            type: string
        "500":
          description: Error activando el usuario
          schema:
            type: string
      summary: activate user
      tags:
      - users
  /users/deactivate/{id}:
    put:
      consumes:
      - application/json
      description: deactivate user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Usuario desactivado correctamente
          schema:
            type: string
        "400":
          description: Usuario no existe
          schema:
            type: string
        "404":
          description: El usuario no existe
          schema:
            type: string
        "500":
          description: Error eliminando el usuario
          schema:
            type: string
      summary: deactivate user
      tags:
      - users
  /users/email/{email}:
    get:
      consumes:
      - application/json
      description: get user by email
      parameters:
      - description: User Email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.UserResponse'
        "404":
          description: El usuario no existe
          schema:
            type: string
        "500":
          description: Error obteniendo el usuario
          schema:
            type: string
      summary: get user by email
      tags:
      - users
swagger: "2.0"
