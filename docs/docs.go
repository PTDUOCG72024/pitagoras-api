// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "xbizzybone",
            "email": "xbizzybone@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/accidents/": {
            "get": {
                "description": "Get all accidents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accidents"
                ],
                "summary": "Get all accidents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Employee start date",
                        "name": "employee_start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Employee end date",
                        "name": "employee_end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Employee birth date start",
                        "name": "employee_birth_date_start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Employee birth date end",
                        "name": "employee_birth_date_end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "project_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Gravity ID",
                        "name": "gravity_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Classification ID",
                        "name": "classification_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Injured Part ID",
                        "name": "injured_part_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "employee_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Accidentes obtenidos correctamente",
                        "schema": {
                            "$ref": "#/definitions/accidents.GetAccidentByIdResponse"
                        }
                    },
                    "500": {
                        "description": "Error obteniendo los accidentes",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new accident",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accidents"
                ],
                "summary": "Create a new accident",
                "parameters": [
                    {
                        "description": "Create Accident Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accidents.CreateAccidentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Accidente creado correctamente",
                        "schema": {
                            "$ref": "#/definitions/accidents.CreateAccidentResponse"
                        }
                    },
                    "400": {
                        "description": "Error validando el cuerpo de la petición",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creando el accidente",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/accidents/{id}": {
            "get": {
                "description": "Get an accident by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accidents"
                ],
                "summary": "Get an accident by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Accident ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Accidente obtenido correctamente",
                        "schema": {
                            "$ref": "#/definitions/accidents.GetAccidentByIdResponse"
                        }
                    },
                    "500": {
                        "description": "Error obteniendo el accidente",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an accident",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accidents"
                ],
                "summary": "Update an accident",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Accident ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Accident Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accidents.UpdateAccidentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Accidente actualizado correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error validando el cuerpo de la petición",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error actualizando el accidente",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an accident",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accidents"
                ],
                "summary": "Delete an accident",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Accident ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Accidente eliminado correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error eliminando el accidente",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "login user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "login user",
                "parameters": [
                    {
                        "description": "UserRequest",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.UserLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Error validando el cuerpo de la petición",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Cuenta de usuario deshabilitada",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "El usuario no existe",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error iniciando sesión",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "register new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "register new user",
                "parameters": [
                    {
                        "description": "UserCreateRequest",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.UserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.UserCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Error validando el cuerpo de la petición",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "El usuario ya existe",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creando el usuario",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/user/activate/{id}": {
            "put": {
                "description": "activate user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "activate user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuario activado correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Usuario no existe",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "El usuario no existe",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error activando el usuario",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/user/deactivate/{id}": {
            "delete": {
                "description": "deactivate user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "deactivate user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuario desactivado correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Usuario no existe",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "El usuario no existe",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error eliminando el usuario",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/user/email/{email}": {
            "get": {
                "description": "get user by email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "get user by email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.UserResponse"
                        }
                    },
                    "404": {
                        "description": "El usuario no existe",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error obteniendo el usuario",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/user/{id}": {
            "get": {
                "description": "get user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "get user by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Usuario no existe",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "El usuario no existe",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error obteniendo el usuario",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "update user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UserUpdateRequest",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.UserUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuario actualizado correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Usuario no existe",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "El usuario no existe",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error actualizando el usuario",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/classifications/": {
            "get": {
                "description": "Get all classifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "classifications"
                ],
                "summary": "Get all classifications",
                "responses": {
                    "200": {
                        "description": "Clasificaciones obtenidas correctamente",
                        "schema": {
                            "$ref": "#/definitions/accidents.GetClassificationByIdResponse"
                        }
                    },
                    "500": {
                        "description": "Error obteniendo las clasificaciones",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Classification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "classifications"
                ],
                "summary": "Create a new Classification",
                "parameters": [
                    {
                        "description": "Create Classification Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accidents.CreateClassificationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Clasificación creada correctamente",
                        "schema": {
                            "$ref": "#/definitions/accidents.CreateClassificationResponse"
                        }
                    },
                    "400": {
                        "description": "Error validando el cuerpo de la petición",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creando la clasificación",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/classifications/activate/{id}": {
            "put": {
                "description": "Activate a Classification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "classifications"
                ],
                "summary": "Activate a Classification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Classification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Clasificación activada correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error activando la clasificación",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/classifications/deactivate/{id}": {
            "put": {
                "description": "Deactivate a Classification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "classifications"
                ],
                "summary": "Deactivate a Classification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Classification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Clasificación desactivada correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error desactivando la clasificación",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/classifications/{id}": {
            "get": {
                "description": "Get a Classification by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "classifications"
                ],
                "summary": "Get a Classification by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Classification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Clasificación obtenida correctamente",
                        "schema": {
                            "$ref": "#/definitions/accidents.GetClassificationByIdResponse"
                        }
                    },
                    "500": {
                        "description": "Error obteniendo la clasificación",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a Classification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "classifications"
                ],
                "summary": "Update a Classification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Classification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Classification Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accidents.UpdateClassificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Clasificación actualizada correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error validando el cuerpo de la petición",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error actualizando la clasificación",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a Classification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "classifications"
                ],
                "summary": "Delete a Classification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Classification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Clasificación eliminada correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error eliminando la clasificación",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employees": {
            "get": {
                "description": "Get all employees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Get all employees",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/employees.GetEmployeeResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Error obteniendo los empleados",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Create a new employee",
                "parameters": [
                    {
                        "description": "Employee object that needs to be created",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/employees.CreateEmployeeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/employees.CreateEmployeeResponse"
                        }
                    },
                    "400": {
                        "description": "Error validando el cuerpo de la petición",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creando el empleado",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employees/activate/{id}": {
            "put": {
                "description": "Activate a new employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Activate a new employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Empleado activado correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error activando el empleado",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employees/deactivate/{id}": {
            "put": {
                "description": "Deactivate a employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Deactivate a employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Empleado desactivado correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error desactivando el empleado",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employees/{id}": {
            "get": {
                "description": "Get a employee by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Get a employee by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/employees.GetEmployeeResponse"
                        }
                    },
                    "500": {
                        "description": "Error obteniendo el empleado",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Update a employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Employee object that needs to be updated",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/employees.UpdateEmployeeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Empleado actualizado correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error validando el cuerpo de la petición",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error actualizando el empleado",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Delete a employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Empleado eliminado correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error eliminando el empleado",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/gravities/": {
            "get": {
                "description": "Get all gravities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gravities"
                ],
                "summary": "Get all gravities",
                "responses": {
                    "200": {
                        "description": "Gravedades obtenidas correctamente",
                        "schema": {
                            "$ref": "#/definitions/accidents.GetGravityByIdResponse"
                        }
                    },
                    "500": {
                        "description": "Error obteniendo las gravedades",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Gravity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gravities"
                ],
                "summary": "Create a new Gravity",
                "parameters": [
                    {
                        "description": "Create Gravity Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accidents.CreateGravityRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Gravedad creada correctamente",
                        "schema": {
                            "$ref": "#/definitions/accidents.CreateGravityResponse"
                        }
                    },
                    "400": {
                        "description": "Error validando el cuerpo de la petición",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creando la gravedad",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/gravities/activate/{id}": {
            "put": {
                "description": "Activate a Gravity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gravities"
                ],
                "summary": "Activate a Gravity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gravity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gravedad activada correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error activando la gravedad",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/gravities/deactivate/{id}": {
            "put": {
                "description": "Deactivate a Gravity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gravities"
                ],
                "summary": "Deactivate a Gravity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gravity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gravedad desactivada correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error desactivando la gravedad",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/gravities/{id}": {
            "get": {
                "description": "Get a Gravity by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gravities"
                ],
                "summary": "Get a Gravity by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gravity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gravedad obtenida correctamente",
                        "schema": {
                            "$ref": "#/definitions/accidents.GetGravityByIdResponse"
                        }
                    },
                    "500": {
                        "description": "Error obteniendo la gravedad",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a Gravity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gravities"
                ],
                "summary": "Update a Gravity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gravity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Gravity Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accidents.UpdateGravityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gravedad actualizada correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error validando el cuerpo de la petición",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error actualizando la gravedad",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a Gravity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gravities"
                ],
                "summary": "Delete a Gravity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gravity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gravedad eliminada correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error eliminando la gravedad",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/injured-parts/": {
            "get": {
                "description": "Get all injured parts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "injured-parts"
                ],
                "summary": "Get all injured parts",
                "responses": {
                    "200": {
                        "description": "Partes lesionadas obtenidas correctamente",
                        "schema": {
                            "$ref": "#/definitions/accidents.GetInjuredPartByIdResponse"
                        }
                    },
                    "500": {
                        "description": "Error obteniendo las partes lesionadas",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new InjuredPart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "injured-parts"
                ],
                "summary": "Create a new InjuredPart",
                "parameters": [
                    {
                        "description": "Create InjuredPart Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accidents.CreateInjuredPartRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Parte lesionada creada correctamente",
                        "schema": {
                            "$ref": "#/definitions/accidents.CreateInjuredPartResponse"
                        }
                    },
                    "400": {
                        "description": "Error validando el cuerpo de la petición",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creando la parte lesionada",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/injured-parts/activate/{id}": {
            "put": {
                "description": "Activate a InjuredPart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "injured-parts"
                ],
                "summary": "Activate a InjuredPart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "InjuredPart ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parte lesionada activada correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error activando la parte lesionada",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/injured-parts/deactivate/{id}": {
            "put": {
                "description": "Deactivate a InjuredPart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "injured-parts"
                ],
                "summary": "Deactivate a InjuredPart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "InjuredPart ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parte lesionada desactivada correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error desactivando la parte lesionada",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/injured-parts/{id}": {
            "get": {
                "description": "Get a InjuredPart by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "injured-parts"
                ],
                "summary": "Get a InjuredPart by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "InjuredPart ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parte lesionada obtenida correctamente",
                        "schema": {
                            "$ref": "#/definitions/accidents.GetInjuredPartByIdResponse"
                        }
                    },
                    "500": {
                        "description": "Error obteniendo la parte lesionada",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a InjuredPart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "injured-parts"
                ],
                "summary": "Update a InjuredPart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "InjuredPart ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update InjuredPart Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accidents.UpdateInjuredPartRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parte lesionada actualizada correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error validando el cuerpo de la petición",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error actualizando la parte lesionada",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a InjuredPart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "injured-parts"
                ],
                "summary": "Delete a InjuredPart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "InjuredPart ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parte lesionada eliminada correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error eliminando la parte lesionada",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/nationalities": {
            "get": {
                "description": "Get all nationalities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nationalities"
                ],
                "summary": "Get all nationalities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/employees.GetNationalityResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Error obteniendo las nacionalidades",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new nationality",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nationalities"
                ],
                "summary": "Create a new nationality",
                "parameters": [
                    {
                        "description": "Nationality object that needs to be created",
                        "name": "nationality",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/employees.CreateNationalityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/employees.CreateNationalityResponse"
                        }
                    },
                    "400": {
                        "description": "Error validando el cuerpo de la petición",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creando la nacionalidad",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/nationalities/activate/{id}": {
            "put": {
                "description": "Activate a new nationality",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nationalities"
                ],
                "summary": "Activate a new nationality",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nationality ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nacionalidad activada correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error activando la nacionalidad",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/nationalities/deactivate/{id}": {
            "put": {
                "description": "Deactivate a nationality",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nationalities"
                ],
                "summary": "Deactivate a nationality",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nationality ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nacionalidad desactivada correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error desactivando la nacionalidad",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/nationalities/{id}": {
            "get": {
                "description": "Get nationality by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nationalities"
                ],
                "summary": "Get nationality by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nationality ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/employees.GetNationalityResponse"
                        }
                    },
                    "500": {
                        "description": "Error obteniendo la nacionalidad",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a nationality",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nationalities"
                ],
                "summary": "Update a nationality",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nationality ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Nationality object that needs to be updated",
                        "name": "nationality",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/employees.UpdateNationalityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nacionalidad actualizada correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error validando el cuerpo de la petición",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error actualizando la nacionalidad",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a nationality",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nationalities"
                ],
                "summary": "Delete a nationality",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nationality ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nacionalidad eliminada correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error eliminando la nacionalidad",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/positions": {
            "get": {
                "description": "Get all positions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "positions"
                ],
                "summary": "Get all positions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/employees.GetPositionResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Error obteniendo los cargos",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "positions"
                ],
                "summary": "Create a new position",
                "parameters": [
                    {
                        "description": "Position object that needs to be created",
                        "name": "position",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/employees.CreatePositionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/employees.CreatePositionResponse"
                        }
                    },
                    "400": {
                        "description": "Error validando el cuerpo de la petición",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creando el cargo",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/positions/activate/{id}": {
            "put": {
                "description": "Activate a new position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "positions"
                ],
                "summary": "Activate a new position",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Position ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cargo activado correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error activando el cargo",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/positions/deactivate/{id}": {
            "put": {
                "description": "Deactivate a position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "positions"
                ],
                "summary": "Deactivate a position",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Position ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cargo desactivado correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error desactivando el cargo",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/positions/{id}": {
            "get": {
                "description": "Get position by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "positions"
                ],
                "summary": "Get position by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Position ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/employees.GetPositionResponse"
                        }
                    },
                    "500": {
                        "description": "Error obteniendo el cargo",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "positions"
                ],
                "summary": "Update a position",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Position ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Position object that needs to be updated",
                        "name": "position",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/employees.UpdatePositionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cargo actualizado correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error validando el cuerpo de la petición",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error actualizando el cargo",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "positions"
                ],
                "summary": "Delete a position",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Position ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cargo eliminado correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error eliminando el cargo",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "description": "Get all projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Get all projects",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/projects.GetProjectResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Error obteniendo los proyectos",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Create a new project",
                "parameters": [
                    {
                        "description": "Project object that needs to be created",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/projects.CreateProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/projects.CreateProjectResponse"
                        }
                    },
                    "400": {
                        "description": "Error validando el cuerpo de la petición",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creando el proyecto",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/projects/activate/{id}": {
            "put": {
                "description": "Activate a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Activate a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Proyecto activado correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error activando el proyecto",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/projects/deactivate/{id}": {
            "put": {
                "description": "Deactivate a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Deactivate a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Proyecto desactivado correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error desactivando el proyecto",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/projects/{id}": {
            "get": {
                "description": "Get a project by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Get a project by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/projects.GetProjectResponse"
                        }
                    },
                    "500": {
                        "description": "Error obteniendo el proyecto",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Update a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Project object that needs to be updated",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/projects.UpdateProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Proyecto actualizado correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error validando el cuerpo de la petición",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error actualizando el proyecto",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Delete a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Proyecto eliminado correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error eliminando el proyecto",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/supervisors": {
            "get": {
                "description": "Get all supervisors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "supervisors"
                ],
                "summary": "Get all supervisors",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/employees.GetSupervisorResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Error obteniendo los supervisores",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new supervisor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "supervisors"
                ],
                "summary": "Create a new supervisor",
                "parameters": [
                    {
                        "description": "Supervisor object that needs to be created",
                        "name": "supervisor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/employees.CreateSupervisorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/employees.CreateSupervisorResponse"
                        }
                    },
                    "400": {
                        "description": "Error validando el cuerpo de la petición",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creando el supervisor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/supervisors/activate/{id}": {
            "put": {
                "description": "Activate a new supervisor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "supervisors"
                ],
                "summary": "Activate a new supervisor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Supervisor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supervisor activado correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error activando el supervisor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/supervisors/deactivate/{id}": {
            "put": {
                "description": "Deactivate a supervisor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "supervisors"
                ],
                "summary": "Deactivate a supervisor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Supervisor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supervisor desactivado correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error desactivando el supervisor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/supervisors/{id}": {
            "get": {
                "description": "Get supervisor by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "supervisors"
                ],
                "summary": "Get supervisor by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Supervisor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/employees.GetSupervisorResponse"
                        }
                    },
                    "500": {
                        "description": "Error obteniendo el supervisor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a supervisor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "supervisors"
                ],
                "summary": "Update a supervisor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Supervisor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Supervisor object that needs to be updated",
                        "name": "supervisor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/employees.UpdateSupervisorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supervisor actualizado correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error validando el cuerpo de la petición",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error actualizando el supervisor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a supervisor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "supervisors"
                ],
                "summary": "Delete a supervisor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Supervisor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supervisor eliminado correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error eliminando el supervisor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "accidents.Classification": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "accidents.CreateAccidentRequest": {
            "type": "object",
            "properties": {
                "accident_date": {
                    "type": "string"
                },
                "classification_id": {
                    "type": "string"
                },
                "construction_area": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "string"
                },
                "gravity_id": {
                    "type": "string"
                },
                "injured_part_id": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string"
                }
            }
        },
        "accidents.CreateAccidentResponse": {
            "type": "object",
            "properties": {
                "accident_date": {
                    "type": "string"
                },
                "classification": {
                    "$ref": "#/definitions/accidents.Classification"
                },
                "construction_area": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "employee": {
                    "$ref": "#/definitions/employees.Employee"
                },
                "gravity": {
                    "$ref": "#/definitions/accidents.Gravity"
                },
                "id": {
                    "type": "string"
                },
                "injured_part": {
                    "$ref": "#/definitions/accidents.InjuredPart"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "project": {
                    "$ref": "#/definitions/projects.Project"
                }
            }
        },
        "accidents.CreateClassificationRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "accidents.CreateClassificationResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "accidents.CreateGravityRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "accidents.CreateGravityResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "accidents.CreateInjuredPartRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "accidents.CreateInjuredPartResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "accidents.GetAccidentByIdResponse": {
            "type": "object",
            "properties": {
                "accident_date": {
                    "type": "string"
                },
                "classification": {
                    "$ref": "#/definitions/accidents.Classification"
                },
                "construction_area": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "employee": {
                    "$ref": "#/definitions/employees.Employee"
                },
                "gravity": {
                    "$ref": "#/definitions/accidents.Gravity"
                },
                "id": {
                    "type": "string"
                },
                "injured_part": {
                    "$ref": "#/definitions/accidents.InjuredPart"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "project": {
                    "$ref": "#/definitions/projects.Project"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "accidents.GetClassificationByIdResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "accidents.GetGravityByIdResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "accidents.GetInjuredPartByIdResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "accidents.Gravity": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "accidents.InjuredPart": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "accidents.UpdateAccidentRequest": {
            "type": "object",
            "properties": {
                "accident_date": {
                    "type": "string"
                },
                "classification_id": {
                    "type": "string"
                },
                "construction_area": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "string"
                },
                "gravity_id": {
                    "type": "string"
                },
                "injured_part_id": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string"
                }
            }
        },
        "accidents.UpdateClassificationRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "accidents.UpdateGravityRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "accidents.UpdateInjuredPartRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "employees.CreateEmployeeRequest": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "contract_type": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "identification_number": {
                    "type": "string"
                },
                "identification_type": {
                    "type": "string"
                },
                "in_law": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "nationality_id": {
                    "type": "string"
                },
                "position_id": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "supervisor_id": {
                    "type": "string"
                }
            }
        },
        "employees.CreateEmployeeResponse": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "contract_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "identification_number": {
                    "type": "string"
                },
                "identification_type": {
                    "type": "string"
                },
                "in_law": {
                    "type": "boolean"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "nationality": {
                    "$ref": "#/definitions/employees.Nationality"
                },
                "position": {
                    "$ref": "#/definitions/employees.Position"
                },
                "start_date": {
                    "type": "string"
                },
                "supervisor": {
                    "$ref": "#/definitions/employees.Supervisor"
                }
            }
        },
        "employees.CreateNationalityRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "employees.CreateNationalityResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "employees.CreatePositionRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "employees.CreatePositionResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "employees.CreateSupervisorRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "employees.CreateSupervisorResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "employees.Employee": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "contract_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string",
                    "default": "now()"
                },
                "delete_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "identification_number": {
                    "type": "string"
                },
                "identification_type": {
                    "type": "string"
                },
                "in_law": {
                    "type": "boolean"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "nationality": {
                    "$ref": "#/definitions/employees.Nationality"
                },
                "position": {
                    "$ref": "#/definitions/employees.Position"
                },
                "start_date": {
                    "type": "string"
                },
                "supervisor": {
                    "$ref": "#/definitions/employees.Supervisor"
                },
                "updated_at": {
                    "type": "string",
                    "default": "now()"
                }
            }
        },
        "employees.GetEmployeeResponse": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "contract_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "delete_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "identification_number": {
                    "type": "string"
                },
                "identification_type": {
                    "type": "string"
                },
                "in_law": {
                    "type": "boolean"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "nationality": {
                    "$ref": "#/definitions/employees.Nationality"
                },
                "position": {
                    "$ref": "#/definitions/employees.Position"
                },
                "start_date": {
                    "type": "string"
                },
                "supervisor": {
                    "$ref": "#/definitions/employees.Supervisor"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "employees.GetNationalityResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "delete_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "employees.GetPositionResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "delete_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "employees.GetSupervisorResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "delete_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "employees.Nationality": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "default": "now()"
                },
                "delete_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "default": "now()"
                }
            }
        },
        "employees.Position": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "default": "now()"
                },
                "delete_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "default": "now()"
                }
            }
        },
        "employees.Supervisor": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "default": "now()"
                },
                "delete_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "default": "now()"
                }
            }
        },
        "employees.UpdateEmployeeRequest": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "contract_type": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "identification_number": {
                    "type": "string"
                },
                "identification_type": {
                    "type": "string"
                },
                "in_law": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "nationality_id": {
                    "type": "string"
                },
                "position_id": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "supervisor_id": {
                    "type": "string"
                }
            }
        },
        "employees.UpdateNationalityRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "employees.UpdatePositionRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "employees.UpdateSupervisorRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "projects.CreateProjectRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "projects.CreateProjectResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "projects.GetProjectResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "delete_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "projects.Project": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "default": "now()"
                },
                "delete_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "default": "now()"
                }
            }
        },
        "projects.UpdateProjectRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "users.UserCreateRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "users.UserCreateResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "users.UserLoginResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "default": "now()"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_login": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "default": "now()"
                }
            }
        },
        "users.UserRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "created_at": {
                    "type": "string",
                    "default": "now()"
                },
                "delete_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "last_login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "default": "now()"
                }
            }
        },
        "users.UserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "default": "now()"
                },
                "delete_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "last_login": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "default": "now()"
                }
            }
        },
        "users.UserUpdateRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "pitagoras-api-production.up.railway.app",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "GoFiber Pitagoras API",
	Description:      "Golang GoFiber swagger auto generate step by step by swaggo",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
